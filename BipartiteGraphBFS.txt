//Using BFS
class Solution
{
    public boolean bfs(int node,ArrayList<ArrayList<Integer>>adj,int[] col)
    {
     Queue<Integer> q=new LinkedList<>();
     q.add(node);
     col[node]=0;
     
     
     while(!q.isEmpty())
     {
         int cur=q.peek();
         q.remove();
         
         for(Integer ele:adj.get(cur))
         {
             if(col[ele]==-1){ col[ele]=1-col[cur]; q.add(ele);}
             
             else if(col[ele]==col[cur]) return false;
         }
     }
     return true;
    }
    
    public boolean isBipartite(int V, ArrayList<ArrayList<Integer>>adj)
    {
        // Code here
        
        int col[] =new int[V];
        
        for(int i=0;i<V;i++)
        col[i]=-1;
        
        for(int i=0;i<V;i++)
        {
            if(col[i]==-1) // if color is not colored
            {
                if(bfs(i,adj,col)==false)
                return false;
            }
        }
        return true;
    }
}

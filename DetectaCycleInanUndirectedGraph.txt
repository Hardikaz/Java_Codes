class Solution {
    // Function to detect cycle in an undirected graph.
    
    public boolean dfs( ArrayList<ArrayList<Integer>> adj,int parent,int i,int[] vis)
    {
        vis[i]=1;
        
        for(Integer it:adj.get(i))
        {
            if(vis[it]==0)
            {
                if(dfs(adj,i,it,vis))
                return true;
            }
            
            else if(parent!=it) return true;
        }
        
        return false;
    }
    
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
    int[] vis=new int[V];
    
    for(int i=0;i<V;i++)
    {
        if(vis[i]==0)
        {
            if(dfs(adj,-1,i,vis))
            return true;
        }
    }
    
    return false;
    }
}
